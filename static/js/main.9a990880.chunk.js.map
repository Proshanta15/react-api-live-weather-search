{"version":3,"sources":["components/Tempapp.js","App.js","index.js"],"names":["Tempapp","useState","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","resJson","main","fetchApi","className","type","value","onChange","event","target","temp","temp_min","temp_max","App","ReactDOM","render","document","getElementById"],"mappings":"sQA2DeA,EAxDC,WAEZ,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA6BF,mBAAS,SAAtC,mBAAQG,EAAR,KAAgBC,EAAhB,KAaA,OAXAC,qBAAW,YACO,uCAAG,gCAAAC,EAAA,6DACPC,EADO,2DACmDJ,EADnD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAGSA,EAASC,OAHlB,OAGPC,EAHO,OAKbT,EAAQS,EAAQC,MALH,2CAAH,qDAOdC,KACF,CAACV,IAGC,qCACA,qBAAKW,UAAU,QAAf,SACA,uDAGA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBAAOC,KAAK,SAASC,MAAOb,EAAQW,UAAU,aAAaG,SAAY,SAACC,GACpEd,EAAUc,EAAMC,OAAOH,YAIzBf,EAGF,8BACA,sBAAKa,UAAU,OAAf,UACA,qBAAIA,UAAU,WAAd,UACA,mBAAGA,UAAU,uBADb,IACwCX,KAExC,qBAAIW,UAAU,OAAd,UACCb,EAAKmB,KADN,aAIA,qBAAIN,UAAU,cAAd,oBAAoCb,EAAKoB,SAAzC,oBAAiEpB,EAAKqB,SAAtE,oBAXI,mBAAGR,UAAU,WAAb,mCCvBLS,EAPH,WACR,OACI,mCACA,cAAC,EAAD,O,MCARC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a990880.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './css/style.css';\r\n\r\nconst Tempapp = () =>{\r\n\r\n    const [city, setCity] = useState(null);\r\n\r\n    const [ search, setSearch] = useState(\"Dhaka\");\r\n\r\n    useEffect( () => {\r\n        const fetchApi = async () =>{\r\n            const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=69e20ac86db4f7a545b2d9bcb3c740f8`\r\n            const response = await fetch(url);\r\n            const resJson = await response.json();\r\n            \r\n            setCity(resJson.main);\r\n        }\r\n        fetchApi();\r\n    },[search] )\r\n\r\n    return(\r\n        <>\r\n        <div className=\"title\">\r\n        <h1>Live Search Weather</h1>\r\n        </div>\r\n\r\n        <div className=\"box\">\r\n            <div className=\"inputData\">\r\n                <input type=\"search\" value={search} className=\"inputField\" onChange= { (event) =>{\r\n                    setSearch(event.target.value)\r\n                }} />\r\n            </div>\r\n\r\n                {!city ? (\r\n                    <p className=\"errorMsg\"> No Data Found</p>\r\n                ) : (\r\n                <div>\r\n                <div className=\"info\">\r\n                <h2 className=\"location\"> \r\n                <i className=\"fas fa-street-view\"></i> {search}\r\n                </h2>\r\n                <h1 className=\"temp\">\r\n                {city.temp}°Cel\r\n                </h1>\r\n\r\n                <h3 className=\"tempmin_max\"> Min : {city.temp_min}°Cel | Max :  {city.temp_max}°Cel  </h3>\r\n            </div>\r\n\r\n           \r\n            </div>\r\n                )\r\n\r\n                }\r\n            \r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Tempapp;","import React from 'react';\r\nimport Tempapp from './components/Tempapp';\r\n\r\n\r\nconst App = () =>{\r\n    return(\r\n        <>\r\n        <Tempapp />\r\n        </>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}